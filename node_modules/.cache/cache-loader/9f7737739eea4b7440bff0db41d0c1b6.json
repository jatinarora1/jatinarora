{"remainingRequest":"/Users/inmatin/Desktop/anshulrgoyal/node_modules/babel-loader/lib/index.js??ref--12-1!/Users/inmatin/Desktop/anshulrgoyal/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/Users/inmatin/Desktop/anshulrgoyal/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js??ref--12-3!/Users/inmatin/Desktop/anshulrgoyal/blog/2020-05-24-strapi.md","dependencies":[{"path":"/Users/inmatin/Desktop/anshulrgoyal/blog/2020-05-24-strapi.md","mtime":1597636846611},{"path":"/Users/inmatin/Desktop/anshulrgoyal/.docusaurus/docusaurus-plugin-content-blog/site-blog-2020-05-24-strapi-md-28a.json","mtime":1597646785274},{"path":"/Users/inmatin/Desktop/anshulrgoyal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inmatin/Desktop/anshulrgoyal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/inmatin/Desktop/anshulrgoyal/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/inmatin/Desktop/anshulrgoyal/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/inmatin/Desktop/anshulrgoyal/blog/2020-05-24-strapi.md"],"names":["React","mdx","frontMatter","title","id","author","author_url","author_image_url","tags","metadata","rightToc","value","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'All in one guide for creating a killer API with Strapi',\n\tid: 'strapi',\n\tauthor: 'Anshul Goyal',\n\tauthor_url: 'https://github.com/anshulrgoyal',\n\tauthor_image_url: '/img/anshul.jpg',\n\ttags: [\n\t\t'strapi',\n\t\t'nodejs',\n\t\t'cms',\n\t\t'backend'\n\t]\n};\nexport const metadata = {\n  \"permalink\": \"/blog/strapi\",\n  \"source\": \"@site/blog/2020-05-24-strapi.md\",\n  \"description\": \"This article was originally published here\",\n  \"date\": \"2020-05-24T00:00:00.000Z\",\n  \"tags\": [\n    {\n      \"label\": \"strapi\",\n      \"permalink\": \"/blog/tags/strapi\"\n    },\n    {\n      \"label\": \"nodejs\",\n      \"permalink\": \"/blog/tags/nodejs\"\n    },\n    {\n      \"label\": \"cms\",\n      \"permalink\": \"/blog/tags/cms\"\n    },\n    {\n      \"label\": \"backend\",\n      \"permalink\": \"/blog/tags/backend\"\n    }\n  ],\n  \"title\": \"All in one guide for creating a killer API with Strapi\",\n  \"readingTime\": 11.375,\n  \"truncated\": true,\n  \"nextItem\": {\n    \"title\": \"A beginners guide to gRPC with Rust\",\n    \"permalink\": \"/blog/grpc-rust\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'This article was originally published here',\n  id: 'this-article-was-originally-published-here',\n  children: []\n}, {\n  value: 'Creating Database Schema',\n  id: 'creating-database-schema',\n  children: []\n}, {\n  value: 'Documentation Plugin',\n  id: 'documentation-plugin',\n  children: []\n}, {\n  value: 'Authentication',\n  id: 'authentication',\n  children: []\n}, {\n  value: 'Setting Up Permission',\n  id: 'setting-up-permission',\n  children: []\n}, {\n  value: 'Adding Comments',\n  id: 'adding-comments',\n  children: []\n}, {\n  value: 'Homepage',\n  id: 'homepage',\n  children: []\n}, {\n  value: 'Blog Page',\n  id: 'blog-page',\n  children: []\n}];\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"this-article-was-originally-published-here\"\n    }}>{`This article was originally published `}<a parentName=\"h2\" {...{\n        \"href\": \"https://blog.logrocket.com/how-to-create-an-api-with-strapi/\"\n      }}>{`here`}</a></h2>\n    <p>{`CMS has been around for quite some time. CMS refers to the content management system. Strapi is a headless CMS for Node.js. Strapi provides GUI for creating different content types and user management baked in the platform. Strapi supports both Restful API and GraphQL. Strapi supports both NoSQL and SQL databases. Changing the database is as simple as changing environment variables.`}</p>\n    {\n      /*truncate*/\n    }\n    <h1 {...{\n      \"id\": \"setting-up-the-work-environment\"\n    }}>{`Setting up the work environment`}</h1>\n    <p>{`Strapi requires Node.js installed on the system. Node.js can be downloaded from the official website. Strapi provides a boilerplate generator `}<inlineCode parentName=\"p\">{`create-strapi-app`}</inlineCode>{`, for setting up the application. It can be installed globally using npm using the following commands.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ npm i -g create-strapi-app\n`}</code></pre>\n    <p>{`Using `}<inlineCode parentName=\"p\">{`create-strapi-app`}</inlineCode>{` is simple just pass the name of the project. `}<inlineCode parentName=\"p\">{`--quickstart`}</inlineCode>{` will create a project with a default setting.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`create-strapi-app my-blog --quickstart\n`}</code></pre>\n    <p>{`An admin user is required to be created before Strapi can be used. Start the server using `}<inlineCode parentName=\"p\">{`npm run develop`}</inlineCode>{`.It starts the server on `}<inlineCode parentName=\"p\">{`http://localhost:1337`}</inlineCode>{`. Admin user is created using `}<inlineCode parentName=\"p\">{`http://localhost:1337/admin/auth/register`}</inlineCode>{`.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590234211220_image.png\",\n        \"alt\": \"Example for Admin User\"\n      }}></img></p>\n    <p>{`Once the boiler-plate is ready. Admin UI can be used to build database schema for API.`}</p>\n    <h1 {...{\n      \"id\": \"backend\"\n    }}>{`Backend`}</h1>\n    <p>{`Strapi provides easy UI for the creation of database schema. For changing configuration, we have to edit out project files. For example, for changing the `}<inlineCode parentName=\"p\">{`env`}</inlineCode>{` variable we have to edit the `}<inlineCode parentName=\"p\">{`config/environments`}</inlineCode>{` folder.`}</p>\n    <h2 {...{\n      \"id\": \"creating-database-schema\"\n    }}>{`Creating Database Schema`}</h2>\n    <p>{`Strapi includes a content-builder plugin which provides a great UI for creating a database schema. The plugin is independent of the database. The same schema can be used in the SQL and NoSQL databases. The demo website would have a Blog Collection type and Comment Collection type. The blog would store most of the content of different articles. Comment collection will store comments on blog and user information.`}</p>\n    <p><strong parentName=\"p\">{`Creating a Collection`}</strong>{`\nWe will start by login into our admin at http://localhost:1337/admin. We now open the Content-Types builder page by clicking on `}<strong parentName=\"p\">{`Content-Types Builder`}</strong>{` from the sidebar.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590245355602_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`Now create a new collection named “Blog”. This would store blogs for the site. It would have the title, image, and content.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590245980107_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`Now we would create a collection named “Comment”. This would store comments for the blog. It would have content, user, blog. `}<inlineCode parentName=\"p\">{`blog`}</inlineCode>{` field store the link to the blog on which comment was created and user store details about the user who created it.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590246246530_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590246377435_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`We have created links from comments, one to user collection, and other to blog collection. Blog collection and user collection don’t have information about the link. Now our backend is all set.`}</p>\n    <h2 {...{\n      \"id\": \"documentation-plugin\"\n    }}>{`Documentation Plugin`}</h2>\n    <p>{`We would install documentation-plugin from the “Marketplace” section for easy access to API details. This plugin would create the swagger specification for the API.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590473880995_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h2>\n    <p>{`Authentication is a very important aspect of any application. Strapi has JWT based authentication out of the box. A default key is used for signing JWT. Signing key can be changed in the configuration file `}<inlineCode parentName=\"p\">{`/extensions/users-permissions/config/jwt.json`}</inlineCode>{`. API for user signup and login is already baked in the platform.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"jwtSecret\": \"f1b4e23e-480b-4e58-923e-b759a593c2e0\"\n}\n`}</code></pre>\n    <p>{`We will use the `}<inlineCode parentName=\"p\">{`local`}</inlineCode>{` provider for authentication. This password and email/username are used for authenticating a user. If we open “Documentation” from the Sidebar, it will provide an option to see the swagger API documentation.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590474793994_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`We click on “Open the Documentation” to view swagger API Documentation. If we navigate to “UsersPermissions- User” we can see there are API to create a user and login user.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590475203429_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`We will use `}<inlineCode parentName=\"p\">{`/auth/local`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`/auth/local/register`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"setting-up-permission\"\n    }}>{`Setting Up Permission`}</h2>\n    <p>{`Strapi has two roles by default. These roles are used to control access to content.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Public role is for an unauthenticated user`}</li>\n      <li parentName=\"ol\">{`Authenticated is for an authenticated user.`}</li>\n    </ol>\n    <p>{`These roles are automatically assigned to a user based on authentication status. We would allow “Public” users to read blogs and comments and “Authenticated” users can comment on the blog and edit comments. Roles can be edited in the “Roles and Permission” section.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590485724497_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`Edit public Roles to allow access to Blogs and Comments`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590486276961_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"adding-comments\"\n    }}>{`Adding Comments`}</h2>\n    <p>{`Now let us add comments to our demo website. For adding comments a user must be authenticated. We need to control write access to comment collection by customizing controller for “Comment” collection. The controller for every collection is located in the `}<inlineCode parentName=\"p\">{`api`}</inlineCode>{` folder. For changing controller edit file `}<inlineCode parentName=\"p\">{`api/comment/controllers/comment.js`}</inlineCode>{`.`}</p>\n    <p>{`We need to install `}<inlineCode parentName=\"p\">{`strapi-util`}</inlineCode>{`s for editing our controller.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm i strapi-utils\n\n\n// file: api/comment/controllers/comment.js\n\nconst { sanitizeEntity } = require('strapi-utils');\n\nmodule.exports = {\n    // this method is called when api to create comment is called\n    async create(ctx) {\n        // add user from the request and add it to the body of request\n        ctx.request.body.user = ctx.state.user.id;\n        // call the function to creating comment with data\n        let entity = await strapi.services.comment.create(ctx.request.body);\n        // return data for api after removing field which are not exported\n        return sanitizeEntity(entity, { model: strapi.models.comment });\n    },\n    async update(ctx) {\n        // get the id of comment which is updated\n        const { id } = ctx.params;\n        // finding the comment for user and id\n        const [comment] = await strapi.services.comment.find({\n            id: ctx.params.id,\n            'user.id': ctx.state.user.id,\n        });\n        // comment does not exist send error\n        if (!comment) {\n            return ctx.unauthorized(\\`You can't update this entry\\`);\n        }\n        // update the comment\n        let entity = await strapi.services.comment.update({ id }, ctx.request.body);\n         // return data for api after removing field which are not exported\n        return sanitizeEntity(entity, { model: strapi.models.comment });\n    },\n    async delete(ctx) {\n        // get the id of comment which is updated\n        const { id } = ctx.params;\n        // finding the comment for user and id\n        const [comment] = await strapi.services.comment.find({\n            id: ctx.params.id,\n            'user.id': ctx.state.user.id,\n        });\n        // comment does not exist send error\n        if (!comment) {\n            return ctx.unauthorized(\\`You can't update this entry\\`);\n        }\n        // delete the comment\n        let entity = await strapi.services.comment.delete({ id });\n         // return data for api after removing field which are not exported\n        return sanitizeEntity(entity, { model: strapi.models.comment });\n    },\n};\n`}</code></pre>\n    <p>{`We just add an extra layer over the function provided by strapi, so that we can add user data to the request body, and rest is handled by strapi. Now we need to change the “Authenticated” user role so that users can create, edit, and delete comments.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590587444113_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`We give a user permission to create, delete, edit comments.`}</p>\n    <h1 {...{\n      \"id\": \"frontend\"\n    }}>{`Frontend`}</h1>\n    <p>{`For the frontend, we will use Gatsbyjs. We would create a new gatsby project using `}<inlineCode parentName=\"p\">{`gatsby new frontend`}</inlineCode>{`. File structure for our project is:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`src/\n├── components\n│   ├── card.js\n│   └── dialog.js\n├── images\n└── pages\n    ├── 404.js\n    ├── blog.js\n    └── index.js\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Different Compoments`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`card.js contains a simple card component that displays information provided to it as props.`}</li>\n      <li parentName=\"ul\">{`dialog.js contains a dialog for sign in and signup.`}</li>\n      <li parentName=\"ul\">{`blog.js is used to display blogs and comments.`}</li>\n      <li parentName=\"ul\">{`index.js is the homepage, it display list of blogs`}</li>\n      <li parentName=\"ul\">{`404.js shows URL not found.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"homepage\"\n    }}>{`Homepage`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590834989946_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`We make a GET request to API `}<inlineCode parentName=\"p\">{`/blogs`}</inlineCode>{` to fetch all the blogs. Then it maps over a list of blogs and displays Card component for each blog. It also contains code for displaying login/register dialog. When the user clicks on a Card it navigates them to `}<inlineCode parentName=\"p\">{`/blog`}</inlineCode>{` page.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from \"../components/card\";\nimport Dialog from \"../components/dialog\"\nimport { Button } from '@material-ui/core';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    textAlign: \"center\"\n  },\n  paper: {\n    height: 500,\n    width: 400,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\nexport default function () {\n  const classes = useStyles();\n  const [blogs, setBlogs] = useState([])\n  const [open, setOpen] = useState(false)\n  const [login, setLogin] = useState(false)\n  // fetch all blogs\n  React.useEffect(() => {\n    fetch(\"http://localhost:1337/blogs\").then(res => res.json()).then(val => setBlogs(val))\n  }, [])\n  return (\n    <>\n    {/*dialog for authentication */}\n      <Dialog open={open} setOpen={setOpen} login={login} />\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\">\n            <Grid item xs={10}>\n              <Typography variant=\"h3\" component=\"h2\" gutterBottom gutterLeft>Blogs</Typography>\n            </Grid>\n            {/*check if token is present or not */}\n            {\n              !localStorage.getItem(\"token\") ? [<Grid item xs={1}>\n                <Button onClick={() => { setOpen(true); setLogin(true) }}>Login</Button>\n              </Grid>,\n              <Grid item xs={1}>\n                <Button onClick={() => { setOpen(true); setLogin(false) }}> Register</Button>\n              </Grid>] : \"\"\n            }\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={10}>\n            {/*map through list of blog and create list of cards */}\n            {blogs.map((value) => (\n              <Grid key={value} item>\n                <Card value={value} />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n`}</code></pre>\n    <p>{`Card Component`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590834819604_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <pre><code parentName=\"pre\" {...{}}>{`import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport { Link } from 'gatsby';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\nexport default function NewCard({ value }) {\n  const classes = useStyles();\n  return (\n    <Link to={\\`/blog\\`} state={{ value }}>\n      <Card className={classes.root}>\n        <CardHeader\n          subheader={\\`Published On \\${new Date(value.created_at).toLocaleDateString(\"in\")}\\`}\n        />\n        <CardMedia\n          className={classes.media}\n          image={\"http://localhost:1337\" + value.image.url}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {value.title}\n          </Typography>\n        </CardContent>\n      </Card></Link>\n  );\n}\n`}</code></pre>\n    <p>{`Dialog Component`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590834887038_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`We make a POST request to `}<inlineCode parentName=\"p\">{`/auth/local/register`}</inlineCode>{` for user signup with a username, email, and password. When a register is successful, a JWT token is returned which is saved in local storage and can be used later. For log in we make a POST request to `}<inlineCode parentName=\"p\">{`/auth/local`}</inlineCode>{` with two fields `}<inlineCode parentName=\"p\">{`identifier`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`password`}</inlineCode>{`. `}<inlineCode parentName=\"p\">{`identifier`}</inlineCode>{` can be email or username.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nexport default function FormDialog({ open, setOpen, login }) {\n    const [pass, setPass] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [user, setUser] = useState(\"\")\n    const handleSubmit = () => {\n        if (!login)\n            fetch(\"http://localhost:1337/auth/local/register\", {\n                method: \"post\",\n                headers: {\n                    \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    password: pass,\n                    email,\n                    username: user\n                })\n            }).then((res) => res.json())\n                .then(res => localStorage.setItem(\"token\", res.jwt)).finally(() => setOpen(false))\n        else\n            fetch(\"http://localhost:1337/auth/local\", {\n                method: \"post\",\n                headers: {\n                    \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    password: pass,\n                    identifier: user || email\n                })\n            }).then((res) => res.json())\n                .then(res => localStorage.setItem(\"token\", res.jwt)).finally(() => setOpen(false))\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n    return (\n        <div>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">{login ? \"Login\" : \"Register\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please provide details\n          </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"email\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        fullWidth\n                        value={email}\n                        onChange={(e) => { setEmail(e.target.value) }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"username\"\n                        label=\"Username\"\n                        type=\"email\"\n                        fullWidth\n                        value={user}\n                        onChange={(e) => { setUser(e.target.value) }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        fullWidth\n                        value={pass}\n                        onChange={(e) => { setPass(e.target.value) }}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n                    <Button onClick={handleSubmit} color=\"primary\">\n                        Submit\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"blog-page\"\n    }}>{`Blog Page`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://paper-attachments.dropbox.com/s_CC88355492B2A98EAA40B097B1643DA8AE3D35CE509F7D881364ACA0FE320D6E_1590834917875_image.png\",\n        \"alt\": null\n      }}></img></p>\n    <p>{`We will take the details of the blog from the location prop passed to the page. We will fetch comments for the blog using a GET request to `}<inlineCode parentName=\"p\">{`/comments?blog={{blog-id}}`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`blog-id`}</inlineCode>{` is the id of the current blog. We make a POST request to `}<inlineCode parentName=\"p\">{`/comments`}</inlineCode>{` with JWT token in the header. This token is saved in the local storage.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { TextareaAutosize } from '@material-ui/core';\nimport Button from \"@material-ui/core/Button\"\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        textAlign: \"center\"\n    },\n    paper: {\n        height: 500,\n        width: 400,\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    content: {\n        margin: \"100px\"\n    }\n}));\nexport default function ({ location }) {\n    const classes = useStyles();\n    const [comments, setComments] = useState([])\n    const [content, setContent] = useState(\"\")\n    useEffect(() => {\n        fetch(\\`http://localhost:1337/comments?blog=\\${location.state.value.id}\\`).then(res => res.json()).then(val => setComments(val))\n    }, [])\n    const submitComment = () => {\n        fetch(\"http://localhost:1337/comments\", {\n            method: \"post\",\n            headers: {\n                \"content-type\": \"application/json\",\n                authorization: \\`Bearer \\${localStorage.getItem(\"token\")}\\`\n            },\n            body: JSON.stringify({\n                content,\n                blog: location.state.value.id\n            })\n        }).then(() => fetch(\\`http://localhost:1337/comments?blog=\\${location.state.value.id}\\`).then(res => res.json()).then(val => setComments(val)))\n    }\n    return (\n        <>\n            <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\">\n                        <Grid item xs={10}>\n                            <Typography variant=\"h3\" component=\"h2\" gutterBottom gutterLeft>{location.state.value.title}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"center\">\n                    <img src={\"http://localhost:1337\" + location.state.value.image.url}></img>\n                </Grid>\n                <Grid item xs={12} className={classes.content}>\n                    <Grid container justify=\"center\" spacing={10}>\n                        {location.state.value.content}\n                    </Grid>\n                </Grid>\n                <Typography variant=\"h4\" component=\"h2\" gutterBottom gutterLeft>Comments</Typography>\n                <Grid item xs={12}><TextareaAutosize minLength={10} rowsMin={10} style={{ width: \"100%\" }} value={content} onChange={(e) => setContent(e.target.value)} /></Grid>\n                <Grid item xs={12}><Button onClick={submitComment}>Submit comment</Button></Grid>\n                <Grid item xs={12}>\n                    <Grid container justify=\"left\">\n                        <List>\n                            {\n                                comments.map((val) => <ListItem>\n                                    <ListItemIcon><Avatar>{val.user.username[0]}</Avatar></ListItemIcon>\n                                    <ListItemText primary={\\`\\${val.user.username} said  \\`} />\n                                    <ListItemText secondary={\": \" + val.content} />\n                                </ListItem>)\n                            }\n                        </List>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"database\"\n    }}>{`Database`}</h1>\n    <p>{`Strapi support both NoSQL and SQL database. Changing the database is as simple as changing the env variable in the configuration folder. By default, Strapi uses SQLite which is good for local testing but in production one should use a production-ready database like PostgresSQL or MySQL. We will use PostgreSQL. For changing the database we will edit `}<inlineCode parentName=\"p\">{`config/environments/production/database.json`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"defaultConnection\": \"default\",\n  \"connections\": {\n    \"default\": {\n      \"connector\": \"bookshelf\",\n      \"settings\": {\n        \"client\": \"postgres\",\n        \"host\": \"\\${process.env.DATABASE_HOST }\",\n        \"port\": \"\\${process.env.DATABASE_PORT }\",\n        \"database\": \"\\${process.env.DATABASE_NAME }\",\n        \"username\": \"\\${process.env.DATABASE_USERNAME }\",\n        \"password\": \"\\${process.env.DATABASE_PASSWORD }\"\n      },\n      \"options\": {}\n    }\n  }\n}\n`}</code></pre>\n    <p>{`Now it will pick database credentials from the environment variable in production.`}</p>\n    <h1 {...{\n      \"id\": \"conclusion\"\n    }}>{`Conclusion`}</h1>\n    <p>{`We have gone through some of basic of Strapi. Strapi is great for creating a backend API. It is very customizable and supports a wide array of integration. Strapi can be used with Nuxtjs, Reactjs, Angular any frontend framework. We learned how to create database schema with relations, authentication, customizing controllers, and filtering data.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}