{"remainingRequest":"/Users/inmatin/Desktop/anshulrgoyal/node_modules/babel-loader/lib/index.js??ref--12-1!/Users/inmatin/Desktop/anshulrgoyal/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/Users/inmatin/Desktop/anshulrgoyal/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js??ref--12-3!/Users/inmatin/Desktop/anshulrgoyal/blog/2019-01-14-jwt-auth.md","dependencies":[{"path":"/Users/inmatin/Desktop/anshulrgoyal/blog/2019-01-14-jwt-auth.md","mtime":1597636846609},{"path":"/Users/inmatin/Desktop/anshulrgoyal/.docusaurus/docusaurus-plugin-content-blog/site-blog-2019-01-14-jwt-auth-md-935.json","mtime":1597646785274},{"path":"/Users/inmatin/Desktop/anshulrgoyal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/inmatin/Desktop/anshulrgoyal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/inmatin/Desktop/anshulrgoyal/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/Users/inmatin/Desktop/anshulrgoyal/node_modules/@docusaurus/plugin-content-blog/lib/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/inmatin/Desktop/anshulrgoyal/blog/2019-01-14-jwt-auth.md"],"names":["React","mdx","frontMatter","title","id","author","author_url","author_image_url","tags","image","metadata","rightToc","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'A Practical Guide for JWT Authentication Using Node.js and Express',\n\tid: 'jwt-auth',\n\tauthor: 'Anshul Goyal',\n\tauthor_url: 'https://github.com/anshulrgoyal',\n\tauthor_image_url: '/img/anshul.jpg',\n\ttags: [\n\t\t'jwt',\n\t\t'auth',\n\t\t'nodejs',\n\t\t'express'\n\t],\n\timage: 'https://cdn-images-1.medium.com/max/10836/1*WrDrIa0v80eL43PK-Wtu-w.jpeg'\n};\nexport const metadata = {\n  \"permalink\": \"/blog/jwt-auth\",\n  \"source\": \"@site/blog/2019-01-14-jwt-auth.md\",\n  \"description\": \"Introduction\",\n  \"date\": \"2019-01-14T00:00:00.000Z\",\n  \"tags\": [\n    {\n      \"label\": \"jwt\",\n      \"permalink\": \"/blog/tags/jwt\"\n    },\n    {\n      \"label\": \"auth\",\n      \"permalink\": \"/blog/tags/auth\"\n    },\n    {\n      \"label\": \"nodejs\",\n      \"permalink\": \"/blog/tags/nodejs\"\n    },\n    {\n      \"label\": \"express\",\n      \"permalink\": \"/blog/tags/express\"\n    }\n  ],\n  \"title\": \"A Practical Guide for JWT Authentication Using Node.js and Express\",\n  \"readingTime\": 6.66,\n  \"truncated\": true,\n  \"prevItem\": {\n    \"title\": \"Setting A React Project From Scratch Using Babel And Webpack\",\n    \"permalink\": \"/blog/react-setup\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h1>\n    <p>{`Traditional authentication strategy makes use of sessions and cookies, but scaling these solutions is very difficult — as some kind of state is maintained by the server. JWT, on the other hand, provides a stateless solution for authentication, and stateless applications are pretty easy to scale.`}</p>\n    {\n      /*truncate*/\n    }\n    <h4 {...{\n      \"id\": \"advantages-of-jwt\"\n    }}>{`Advantages of JWT`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Provides a stateless authentication solution`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Very popular and used by many OAuth service providers, like Google and Facebook`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`It’s very easy to verify a JWT token`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`More trustworthy than cookies and sessions`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Authentication can be outsourced, or an authentication service can be used`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Have many applications other than authentication — for instance, it can be used for claims`}</p>\n      </li>\n    </ul>\n    <h4 {...{\n      \"id\": \"content\"\n    }}>{`Content`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`JWT structure and overview`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The JWT authentication mechanism`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Using JWT authentication with Node.js`}</p>\n      </li>\n    </ul>\n    <hr></hr>\n    <h1 {...{\n      \"id\": \"whats-jwt\"\n    }}>{`What’s JWT?`}</h1>\n    <p>{`A JSON Web Token (JWT) is a `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.w3schools.com/json/\"\n      }}>{`JSON object`}</a>{` that’s defined in `}<a parentName=\"p\" {...{\n        \"href\": \"https://tools.ietf.org/html/rfc7519\"\n      }}>{`RFC 7519`}</a>{` as a safe way to represent a set of information between two parties. The token is composed of a header, a payload, and a signature.`}</p>\n    <p>{`JWT is used for authentication, and they can also be used for sharing information. Most JWT are signed using a public key and a private key; therefore, it’s very difficult to tamper with these tokens. JWT has three parts: head, body and signature, each separated by `}<inlineCode parentName=\"p\">{`“.”`}</inlineCode>{`.`}</p>\n    <h4 {...{\n      \"id\": \"head\"\n    }}>{`Head`}</h4>\n    <p>{`The head is a `}<inlineCode parentName=\"p\">{`base64Url`}</inlineCode><strong parentName=\"p\">{`-`}</strong>{`encoded, stringified JS object that contains information about the token. The head contains the type of token, the content type of the token, and an algorithm used to sign that token. The type is specified by the field type and the algorithm used to sign the token.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n}\n`}</code></pre>\n    <p>{`The object is then converted to a string and encoded to `}<inlineCode parentName=\"p\">{`Base64Url`}</inlineCode>{`.`}</p>\n    <p>{`The following code shows how to change the encoding using the buffer module in Node.js.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Buffer.from(JSON.stringify({\n\"alg\": \"HS256\",\n\"typ\": \"JWT\"\n})).toString('base64')\n.replace(/=/g, \"\")\n.replace(/\\\\+/g, \"-\")\n.replace(/\\\\//g, \"_\");\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note: `}</strong><inlineCode parentName=\"p\">{`Base64`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Base64URL`}</inlineCode>{` are the same; however, `}<inlineCode parentName=\"p\">{`+`}</inlineCode>{` is converted to `}<inlineCode parentName=\"p\">{`-`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` is converted to `}<inlineCode parentName=\"p\">{`_`}</inlineCode>{` .`}</p>\n    <p>{`This is done to ensure there’s no collision between the query string and the token since `}<inlineCode parentName=\"p\">{`+`}</inlineCode>{` has a special meaning in the query string (the same goes for `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{`).`}</p>\n    <h4 {...{\n      \"id\": \"body\"\n    }}>{`Body`}</h4>\n    <p>{`The body is the as the head, but it contains the claim or data that’s transferred.`}</p>\n    <p>{`The body may contain special attributes like `}<inlineCode parentName=\"p\">{`iss`}</inlineCode>{` , `}<inlineCode parentName=\"p\">{`sub`}</inlineCode>{` , `}<inlineCode parentName=\"p\">{`aud`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`exp`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`iat`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`jti`}</inlineCode>{`, etc. These attributes have a standard implementation and are accepted by most OAuth services. Some interesting ones are `}<inlineCode parentName=\"p\">{`exp`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`iat`}</inlineCode>{`. `}<inlineCode parentName=\"p\">{`exp`}</inlineCode>{` specifies the time after which the token will become invalid, and `}<inlineCode parentName=\"p\">{`iat`}</inlineCode>{` specifies the time when the token was created.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"sub\": \"90129920\",\n  \"uuid\": \"sfgdsrfg434fdt535fg\",\n  \"iat\": 1516239022,\n  \"exp\": 1545926973,\n}\n`}</code></pre>\n    <p>{`The time is used in seconds, following the 1 January 1970 format. The body is also converted to `}<inlineCode parentName=\"p\">{`Base64URL`}</inlineCode>{` using the same code as used in the head.`}</p>\n    <h4 {...{\n      \"id\": \"signature\"\n    }}>{`Signature`}</h4>\n    <p>{`This is the most important part of the token because it’s used to verify if the token is valid and authentic. Let’s see how the signature is created.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`signature=sha256(base64URL(head)+\".\"+base64URL(body))\n`}</code></pre>\n    <p>{`The token consists of the body and the head encrypted using any hashing algorithm — for example, SHA-256.`}</p>\n    <p>{`The algorithm can be symmetrical or asymmetrical. It depends upon the needs of the application. The example below shows how we can create a signature for JWT.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`const crypto=require('crypto');\nconst private_key=\"dfhghhghgdoghoghg\";\nconst sign = crypto.createHmac('SHA256', private_key)\n.update(head + '.' + body)\n.digest('base64')\n.replace(/=/g, \"\")\n.replace(/\\\\+/g, \"-\")\n.replace(/\\\\//g, \"_\")\n`}</code></pre>\n    <p>{`First, we create a stream from `}<inlineCode parentName=\"p\">{`crypto.createHmac`}</inlineCode>{`. We push the `}<inlineCode parentName=\"p\">{`base64url`}</inlineCode>{`-encoded head and body (separated by `}<inlineCode parentName=\"p\">{`“.”`}</inlineCode>{`) to the created stream. Then, we convert the buffer to the `}<inlineCode parentName=\"p\">{`base64`}</inlineCode>{`-encoded string and then to the `}<inlineCode parentName=\"p\">{`base64url`}</inlineCode>{`-encoded string.`}</p>\n    <h4 {...{\n      \"id\": \"verification\"\n    }}>{`Verification`}</h4>\n    <p>{`When the server verifies the token, it creates the `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{` using the private key. If the `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{` matches the signature on the token, then the token is authentic.`}</p>\n    <p>{`If the token is tempered with, the `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{` of the token should change. But the hacker can’t create the new `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{` because the key is saved with the server. Therefore, the token is verified, and the client can also be verified using the data in the body.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`token=base64url(head)+\".\"+baser64url(body)+\".\"+signature\n`}</code></pre>\n    <hr></hr>\n    <h1 {...{\n      \"id\": \"how-does-authentication-with-jwt-work\"\n    }}>{`How Does Authentication With JWT Work?`}</h1>\n    <p>{`The token with `}<inlineCode parentName=\"p\">{`user_id`}</inlineCode>{` is given to the client, and the client sends the token back to the server every time the client makes an HTTP request to the server.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`body={\n user_id:\"123nfdwf283\",\n}\n`}</code></pre>\n    <p>{`The client must store the token in the browser. The token can be saved in local storage or session storage. Using local storage will keep the user signed in until the token expires, and session storage will keep the user logged in until the browser tab is closed. The token is sent to the server in the authorization header as `}<inlineCode parentName=\"p\">{`Bearer {token}`}</inlineCode>{`.`}</p>\n    <hr></hr>\n    <h1 {...{\n      \"id\": \"using-jwt-with-nodejs\"\n    }}>{`Using JWT With Node.js`}</h1>\n    <p>{`If you don't want to write your own custom JWT solution, you can always use an npm module for it. We’d first install Express and the `}<a parentName=\"p\" {...{\n        \"href\": \"https://jwt.io/\"\n      }}>{`JSON Web Tokens library`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm i express jsonwebtoken mongoose body-parser bcrypt\n`}</code></pre>\n    <p>{`The directory structure of the project:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`root\n   -app.js\n   -user.js\n   -key.js\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`key.js`}</inlineCode>{` contains the private key, but it’s not a good practice. You should always use an `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` variable for such sensitive data.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`module.exports={tokenKey:\"djghhhhuuwiwuewieuwieuriwu\"}\n`}</code></pre>\n    <p>{`The user schema consists of a presave hook. When we create a new user, the password is converted to `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`salt`}</inlineCode>{` using bcryptjs. A static method is also added to the schema for comparing passwords using `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{` and`}<inlineCode parentName=\"p\">{`salt`}</inlineCode>{`.`}</p>\n    <p>{`Passwords are never saved in the database. The passwords are converted to a `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{` using any hashing algorithm, with the help of `}<inlineCode parentName=\"p\">{`salt`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`salt`}</inlineCode>{` acts as the private key for the creating the `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{`. When the user provides a password for login, the password and `}<inlineCode parentName=\"p\">{`salt`}</inlineCode>{` are used to create a `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{`. The created `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{` is then matched with the stored one. If both `}<inlineCode parentName=\"p\">{`hash`}</inlineCode>{`es match, then the password is matched.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`var mongoose = require('mongoose');\nvar bcrypt = require('bcryptjs')\nvar userSchema = new mongoose.Schema({\n    first: String,\n    email: {type:String,unique:true},\n    password: String,\n    image:String\n},{timestamps:true})\n\nuserSchema.pre('save', function (next) {\n    var user = this;\n    if (!user.isModified('password')) {return next()};\n    bcrypt.hash(user.password,10).then((hashedPassword) => {\n        user.password = hashedPassword;\n        next();\n    })\n}, function (err) {\n    next(err)\n})\nuserSchema.methods.comparePassword=function(candidatePassword,next){    bcrypt.compare(candidatePassword,this.password,function(err,isMatch){\n        if(err) return next(err);\n        next(null,isMatch)\n    })\n}\nmodule.exports = mongoose.model(\"user\", userSchema);\n`}</code></pre>\n    <p>{`Let’s create a simple Express server.`}</p>\n    <p>{`The route `}<inlineCode parentName=\"p\">{`/api/auth/signin`}</inlineCode>{` first matches the password and then issues a token to the user. The token is sent by the user to the server every time in the request header, and the token is parsed by the `}<inlineCode parentName=\"p\">{`app.use`}</inlineCode>{` middleware every time.`}</p>\n    <p>{`The middleware also adds user details to the req as `}<inlineCode parentName=\"p\">{`req.user`}</inlineCode>{` . The server listens on the port `}<inlineCode parentName=\"p\">{`3001`}</inlineCode>{` .We can also write a middleware for protecting routes.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`function proctectRoute(req,res,next){\n  // if user exists the token was sent with the request\n  if(req.user){\n   //if user exists then go to next middleware\n     next();\n  }\n// token was not sent with request send error to user\n  else{\n     res.status(500).json({error:'login is required'});\n  }\n}\n`}</code></pre>\n    <p>{`We can use different options with the JSON Web Tokens library. We can set the expiration time, subject, time of issue, etc.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`// we can change algorithm used\njwt.sign({ foo: 'bar' }, cert,\n{ algorithm:'RS256'},function(err,token) {\n    console.log(token);\n});\n\n// we can set expiration time using sync\nconst token =jwt.sign({data: 'foobar'}, 'secret',\n { expiresIn: 60 * 60 });\n`}</code></pre>\n    <hr></hr>\n    <h1 {...{\n      \"id\": \"conclusion\"\n    }}>{`Conclusion`}</h1>\n    <p>{`JSON Web Tokens are great for authentications and very easy to use. The tutorial shows us how we can use JWT for authentication using Node.js and Express.`}</p>\n    <p>{`JWT can also be used for different purposes, which includes any type of claim. The JWT used in the tutorial are signed using a symmetrical algorithm, but you can easily use asymmetrical algorithms also. In the asymmetrical algorithm, the private key is used to sign the token, and a public key is used for verifying the tokens.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}